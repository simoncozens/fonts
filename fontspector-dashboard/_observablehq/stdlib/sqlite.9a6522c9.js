var I=Object.defineProperty;var c=(a,e)=>I(a,"name",{value:e,configurable:!0});var u;import R from"../../_npm/sql.js@1.13.0/3bcc9571.js";var L=Object.defineProperty,o=c((a,e)=>L(a,"name",{value:e,configurable:!0}),"i");const E=R({locateFile:a=>import.meta.resolve("../../_npm/sql.js@1.13.0/dist/")+a});var A=E;const y=(u=class{constructor(e){Object.defineProperties(this,{_db:{value:e}})}static async open(e){const[t,r]=await Promise.all([E,Promise.resolve(e).then(m)]);return new u(new t.Database(r))}async query(e,t){return await b(this._db,e,t)}async queryRow(e,t){return(await this.query(e,t))[0]||null}async explain(e,t){const r=await this.query(`EXPLAIN QUERY PLAN ${e}`,t);return s("pre",{className:"observablehq--inspect"},[f(r.map(n=>n.detail).join(`
`))])}async describeTables({schema:e}={}){return this.query(`SELECT NULLIF(schema, 'main') AS schema, name FROM pragma_table_list() WHERE type = 'table'${e==null?"":" AND schema = ?"} AND name NOT LIKE 'sqlite_%' ORDER BY schema, name`,e==null?[]:[e])}async describeColumns({schema:e,table:t}={}){if(t==null)throw new Error("missing table");const r=await this.query(`SELECT name, type, "notnull" FROM pragma_table_info(?${e==null?"":", ?"}) ORDER BY cid`,e==null?[t]:[t,e]);if(!r.length)throw new Error(`table not found: ${t}`);return r.map(({name:n,type:i,notnull:l})=>({name:n,type:h(i),databaseType:i,nullable:!l}))}async describe(e){const t=await(e===void 0?this.query("SELECT name FROM sqlite_master WHERE type = 'table'"):this.query("SELECT * FROM pragma_table_info(?)",[e]));if(!t.length)throw new Error("Not found");const{columns:r}=t;return s("table",{value:t},[s("thead",[s("tr",r.map(n=>s("th",[f(n)])))]),s("tbody",t.map(n=>s("tr",r.map(i=>s("td",[f(n[i])])))))])}async sql(){return this.query(...this.queryTag.apply(this,arguments))}queryTag(e,...t){return[e.join("?"),t]}},c(u,"o"),u);o(y,"SQLiteDatabaseClient");let p=y;Object.defineProperty(p.prototype,"dialect",{value:"sqlite"});function h(a){switch(a){case"NULL":return"null";case"INT":case"INTEGER":case"TINYINT":case"SMALLINT":case"MEDIUMINT":case"BIGINT":case"UNSIGNED BIG INT":case"INT2":case"INT8":return"integer";case"TEXT":case"CLOB":return"string";case"REAL":case"DOUBLE":case"DOUBLE PRECISION":case"FLOAT":case"NUMERIC":return"number";case"BLOB":return"buffer";case"DATE":case"DATETIME":return"string";default:return/^(?:(?:(?:VARYING|NATIVE) )?CHARACTER|(?:N|VAR|NVAR)CHAR)\(/.test(a)?"string":/^(?:DECIMAL|NUMERIC)\(/.test(a)?"number":"other"}}c(h,"p"),o(h,"sqliteType");function m(a){return typeof a=="string"?fetch(a).then(m):a&&typeof a.arrayBuffer=="function"?a.arrayBuffer().then(m):a instanceof ArrayBuffer?new Uint8Array(a):a}c(m,"m"),o(m,"load");async function b(a,e,t){const[r]=await a.exec(e,t);if(!r)return[];const{columns:n,values:i}=r,l=i.map(d=>Object.fromEntries(d.map((T,N)=>[n[N],T])));return l.columns=n,l}c(b,"R"),o(b,"exec");function s(a,e,t){arguments.length===2&&(t=e,e=void 0);const r=document.createElement(a);if(e!==void 0)for(const n in e)r[n]=e[n];if(t!==void 0)for(const n of t)r.appendChild(n);return r}c(s,"s"),o(s,"element");function f(a){return document.createTextNode(a)}c(f,"f"),o(f,"text");export{p as SQLiteDatabaseClient,A as default};
